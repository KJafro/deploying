{"ast":null,"code":"const Reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n    case \"UPDATE_START\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"UPDATE_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"UPDATE_FAILURE\":\n      return {\n        user: state.user,\n        isFetching: false,\n        error: true\n      };\n    case \"LOGOUT\":\n      return {\n        user: null,\n        isFetching: false,\n        error: false\n      };\n    default:\n      return state;\n  }\n};\n_c = Reducer;\nexport default Reducer;\nvar _c;\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"names":["Reducer","state","action","type","user","isFetching","error","payload"],"sources":["C:/Users/Kurtj/Desktop/Uni Work/stevewebsitereact/client/src/context/Reducer.js"],"sourcesContent":["const Reducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"LOGIN_START\":\r\n            return {\r\n                user:null,\r\n                isFetching:true,\r\n                error:false,\r\n            };\r\n            case \"LOGIN_SUCCESS\":\r\n                return {\r\n                    user:action.payload,\r\n                    isFetching:false,\r\n                    error:false,\r\n                };\r\n                case \"LOGIN_FAILURE\":\r\n                    return {\r\n                        user:null,\r\n                        isFetching:false,\r\n                        error:true,\r\n                    };\r\n                    case \"UPDATE_START\":\r\n                        return {\r\n                            ...state,\r\n                            isFetching:true\r\n                        };\r\n                        case \"UPDATE_SUCCESS\":\r\n                            return {\r\n                                user:action.payload,\r\n                                isFetching:false,\r\n                                error:false,\r\n                            };\r\n                            case \"UPDATE_FAILURE\":\r\n                                return {\r\n                                    user:state.user,\r\n                                    isFetching:false,\r\n                                    error:true,\r\n                                };\r\n                    case \"LOGOUT\":\r\n                        return {\r\n                            user:null,\r\n                            isFetching:false,\r\n                            error:false,\r\n                        };\r\n                    default: return state; \r\n    }\r\n};\r\n\r\nexport default Reducer;"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,aAAa;MACd,OAAO;QACHC,IAAI,EAAC,IAAI;QACTC,UAAU,EAAC,IAAI;QACfC,KAAK,EAAC;MACV,CAAC;IACD,KAAK,eAAe;MAChB,OAAO;QACHF,IAAI,EAACF,MAAM,CAACK,OAAO;QACnBF,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACD,KAAK,eAAe;MAChB,OAAO;QACHF,IAAI,EAAC,IAAI;QACTC,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACD,KAAK,cAAc;MACf,OAAO;QACH,GAAGL,KAAK;QACRI,UAAU,EAAC;MACf,CAAC;IACD,KAAK,gBAAgB;MACjB,OAAO;QACHD,IAAI,EAACF,MAAM,CAACK,OAAO;QACnBF,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACD,KAAK,gBAAgB;MACjB,OAAO;QACHF,IAAI,EAACH,KAAK,CAACG,IAAI;QACfC,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACb,KAAK,QAAQ;MACT,OAAO;QACHF,IAAI,EAAC,IAAI;QACTC,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACL;MAAS,OAAOL,KAAK;EAAC;AAE1C,CAAC;AAAC,KA7CID,OAAO;AA+Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}